---
import { getCollection, render } from 'astro:content';
import '../../styles/global.css';
import Header from '../../components/Header.astro';

export async function getStaticPaths() {
  const examples = await getCollection('examples');
  return examples.map(entry => ({
    params: { slug: entry.id.replace('.md', '') },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await render(entry);
const { data } = entry;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{data.title} | Awesome Agent Examples</title>
  </head>
  <body class="min-h-screen bg-midnightBlue">
    <Header />
    <div class="container mx-auto px-4 py-12 max-w-4xl">
      <!-- Back button -->
      <a
        href="/"
        class="inline-flex items-center gap-2 mb-8 text-white hover:text-lightOrange font-medium transition-colors"
      >
        ← Back to examples
      </a>

      <!-- Article header -->
      <article class="bg-navyBlue rounded-lg border border-slateBlue p-10">
        <header class="mb-8 pb-8 border-b border-slateBlue">
          <!-- Category & Company -->
          <div class="flex items-center gap-3 mb-4">
            <span class="text-xs font-semibold text-lightOrange capitalize">{data.category}</span>
            {data.company && (
              <>
                <span class="text-lightBlue">•</span>
                <span class="text-sm font-semibold text-lightBlue">{data.company}</span>
              </>
            )}
          </div>

          <h1 class="text-4xl font-bold text-white mb-4 leading-tight">{data.title}</h1>

          {data.description && (
            <p class="text-lg mb-6 border-l-4 border-lightOrange pl-4">
              {data.description}
            </p>
          )}

          <div class="flex flex-wrap gap-6 text-sm text-lightBlue mb-6">
            {data.author && (
              <div>
                <span class="font-semibold text-white">Author:</span> {data.author}
              </div>
            )}
            {data.date && (
              <div>
                <span class="font-semibold text-white">Date:</span> {data.date}
              </div>
            )}
          </div>

          {data.tags && data.tags.length > 0 && (
            <div class="flex flex-wrap gap-2 mb-6">
              {data.tags.map(tag => (
                <span class="text-xs px-2.5 py-1 rounded-full bg-faintBlue text-lightBlue border border-slateBlue">
                  {tag}
                </span>
              ))}
            </div>
          )}

          {data.source && (
            <a
              href={data.source}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center gap-2 text-white hover:text-lightOrange font-medium transition-colors"
            >
              View Original Source →
            </a>
          )}
        </header>

        <!-- Content -->
        <div class="prose prose-lg max-w-none prose-headings:text-white prose-a:text-lightOrange prose-a:hover:text-darkerOrange prose-strong:text-white prose-p:text-[#C2D1E5] prose-li:text-[#C2D1E5] prose-code:text-lightBlue prose-pre:bg-faintBlue">
          <Content />
        </div>
      </article>

      <!-- Back button (bottom) -->
      <div class="mt-8">
        <a
          href="/"
          class="inline-flex items-center gap-2 text-white hover:text-lightOrange transition-colors"
        >
          ← Back to examples
        </a>
      </div>
    </div>
  </body>
</html>
