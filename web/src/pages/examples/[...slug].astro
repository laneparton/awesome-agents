---
import { getCollection, render } from 'astro:content';
import '../../styles/global.css';

export async function getStaticPaths() {
  const examples = await getCollection('examples');
  return examples.map(entry => ({
    params: { slug: entry.id.replace('.md', '') },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await render(entry);
const { data } = entry;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{data.title} | Awesome Agent Examples</title>
  </head>
  <body class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-8 max-w-4xl">
      <!-- Back button -->
      <a
        href="/"
        class="inline-flex items-center text-blue-600 hover:text-blue-800 mb-6"
      >
        ← Back to examples
      </a>

      <!-- Article header -->
      <article class="bg-white rounded-lg shadow-sm p-8">
        <header class="mb-8 border-b pb-6">
          <div class="mb-4">
            <span class="inline-block px-3 py-1 text-xs font-semibold rounded-full bg-blue-100 text-blue-800 capitalize">
              {data.category}
            </span>
          </div>

          <h1 class="text-4xl font-bold text-gray-900 mb-4">{data.title}</h1>

          <div class="flex flex-wrap gap-4 text-sm text-gray-600 mb-4">
            {data.company && (
              <div>
                <span class="font-semibold">Company:</span> {data.company}
              </div>
            )}
            {data.author && (
              <div>
                <span class="font-semibold">Author:</span> {data.author}
              </div>
            )}
            {data.date && (
              <div>
                <span class="font-semibold">Date:</span> {data.date}
              </div>
            )}
          </div>

          {data.description && (
            <p class="text-lg text-gray-700 italic border-l-4 border-blue-500 pl-4">
              {data.description}
            </p>
          )}

          {data.tags && data.tags.length > 0 && (
            <div class="flex flex-wrap gap-2 mt-4">
              {data.tags.map(tag => (
                <span class="inline-block px-3 py-1 text-xs rounded-full bg-gray-100 text-gray-600">
                  {tag}
                </span>
              ))}
            </div>
          )}

          {data.source && (
            <div class="mt-4">
              <a
                href={data.source}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center text-blue-600 hover:text-blue-800 font-medium"
              >
                View Original Source →
              </a>
            </div>
          )}
        </header>

        <!-- Content -->
        <div class="prose prose-lg max-w-none prose-headings:text-gray-900 prose-a:text-blue-600 prose-strong:text-gray-900">
          <Content />
        </div>
      </article>

      <!-- Back button (bottom) -->
      <div class="mt-8">
        <a
          href="/"
          class="inline-flex items-center text-blue-600 hover:text-blue-800"
        >
          ← Back to examples
        </a>
      </div>
    </div>
  </body>
</html>
